using HarmonyLib;
using Hazel;
using UnityEngine;
using System.Text.RegularExpressions;

namespace MalumMenu;

[HarmonyPatch(typeof(PlayerControl), nameof(PlayerControl.RpcSendChat))]
public static class RPC_SpamTextPostfix
{
    public static string spamText;
    private static float lastChatTime = 0f;
    private static float chatDelay = 0.5f; // Delay between messages in seconds

    // Prefix patch of PlayerControl.RpcSendChat to set spamText based on the user's chat messages
    public static bool Prefix(string chatText, PlayerControl __instance)
    {
        if (CheatSettings.spamChat)
        {
            chatText = Regex.Replace(chatText, "<.*?>", string.Empty);
            if (string.IsNullOrWhiteSpace(chatText))
            {
                return false;
            }

            spamText = chatText;
            return false; // Skip the original method when the cheat is active
        }

        return true; // Send a normal chat message if the cheat is not active
    }

    //Keep flooding the chat with the user's spamText until the cheat is disabled
    //A short delay (chatDelay) is used to avoid being kicked for sending too many RPC calls too quickly
    public static void Update()
    {
        if (CheatSettings.spamChat && spamText != null && Time.time - lastChatTime >= chatDelay)
        {
            lastChatTime = Time.time;
            SendSpamChat();
        }
    }

    private static void SendSpamChat()
    {
        var HostData = AmongUsClient.Instance.GetHost();
        if (HostData != null && !HostData.Character.Data.Disconnected)
        {
            //Sends a forged SendChat RPC call from each player to all players
            //This generates identical fake chat messages coming from all player, spamming the chat
            foreach (var sender in PlayerControl.AllPlayerControls)
            {
                foreach (var recipient in PlayerControl.AllPlayerControls)
                {
                    MessageWriter writer = AmongUsClient.Instance.StartRpcImmediately(sender.NetId, (byte)RpcCalls.SendChat, SendOption.None, AmongUsClient.Instance.GetClientIdFromCharacter(recipient.Data.Object));
                    writer.Write(spamText);
                    AmongUsClient.Instance.FinishRpcImmediately(writer);
                }
            }
        }
    }
}

[HarmonyPatch(typeof(PlayerPhysics), nameof(PlayerPhysics.LateUpdate))]
public static class RPC_SpamChatPostfix
{
    public static void Postfix(PlayerPhysics __instance)
    {
        RPC_SpamTextPostfix.Update();
        if (!CheatSettings.spamChat)
        {
            RPC_SpamTextPostfix.spamText = null;
        }
    }
}
